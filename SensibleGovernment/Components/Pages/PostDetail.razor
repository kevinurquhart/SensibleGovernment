@page "/post/{PostId:int}"
@using SensibleGovernment.Models
@using SensibleGovernment.Services
@using SensibleGovernment.Components.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@inject PostService PostService
@inject AuthenticationStateProvider AuthStateProvider
@inject AuthService AuthService
@inject AdminService AdminService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@rendermode InteractiveServer
@attribute [AllowAnonymous]

<PageTitle>@(post?.Title ?? "Loading...") - The Sensible Citizen</PageTitle>

@if (loading)
{
    <div class="text-center py-5">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (post == null)
{
    <div class="text-center py-5">
        <i class="bi bi-exclamation-triangle display-1 text-danger"></i>
        <h3 class="mt-3">Story not found</h3>
        <p class="text-muted">This story may have been removed or doesn't exist.</p>
        <a href="/" class="btn btn-primary btn-lg">
            <i class="bi bi-arrow-left"></i> Back to Home
        </a>
    </div>
}
else
{
    <div class="animate-in">
        <!-- Stylish Article Header without image -->
        <div class="article-header-styled">
            <div class="container">
                <nav aria-label="breadcrumb" class="mb-3">
                    <ol class="breadcrumb justify-content-center">
                        <li class="breadcrumb-item"><a href="/" class="text-white-50">Home</a></li>
                        <li class="breadcrumb-item"><a href="/?topic=@post.Topic" class="text-white-50">@post.Topic</a></li>
                        <li class="breadcrumb-item active text-white" aria-current="page">Article</li>
                    </ol>
                </nav>
                <div class="text-center">
                    <span class="badge bg-light text-dark mb-3">@post.Topic</span>
                    <h1 class="display-4 fw-bold text-white mb-4">@post.Title</h1>
                    <div class="d-flex flex-wrap align-items-center justify-content-center">
                        <img src="https://ui-avatars.com/api/?name=@post.Author?.UserName&background=random"
                             class="rounded-circle me-2" width="40" height="40" alt="Author">
                        <span class="text-white me-3">By <strong>@(post.Author?.UserName ?? "Staff Writer")</strong></span>
                        <span class="text-white-50">•</span>
                        <span class="text-white ms-3"><i class="bi bi-calendar3"></i> @post.Created.ToString("MMMM dd, yyyy")</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-lg-8 mx-auto">
                    <!-- Engagement Stats Bar -->
                    <div class="content-section mb-4">
                        <div class="d-flex justify-content-around text-center">
                            <div>
                                <div class="display-6 text-primary">@post.ViewCount</div>
                                <small class="text-muted">Views</small>
                            </div>
                            <div>
                                <div class="display-6 text-success">@post.Likes.Count</div>
                                <small class="text-muted">Likes</small>
                            </div>
                            <div>
                                <div class="display-6 text-info">@post.Comments.Count</div>
                                <small class="text-muted">Comments</small>
                            </div>
                            <div>
                                <SocialShare Title="@post.Title"
                                             Description="@TruncateText(post.Content, 160)" />
                            </div>
                        </div>
                    </div>

                    <!-- Social Sharing Section -->
                    <div class="content-section mb-4">
                        <h5 class="mb-3">Share this article</h5>
                        <SocialShare Title="@post.Title"
                                     Description="@TruncateText(post.Content, 160)"
                                     Url="@Navigation.Uri" />
                    </div>

                    <!-- The Facts Section -->
                    <article class="content-section facts-section">
                        <h2 class="mb-4">
                            <i class="bi bi-newspaper text-primary"></i> The Facts
                        </h2>

                        <!-- Inline image with text wrapping -->
                        @if (!string.IsNullOrEmpty(post.FeaturedImageUrl) || !string.IsNullOrEmpty(post.ThumbnailImageUrl))
                        {
                            <div class="float-end ms-3 mb-3" style="max-width: 50%;">
                                <img src="@(post.FeaturedImageUrl ?? post.ThumbnailImageUrl)" class="img-fluid rounded shadow" alt="@post.Title">
                                @if (!string.IsNullOrEmpty(post.ImageCaption))
                                {
                                    <p class="text-muted small mt-2 text-center">@post.ImageCaption</p>
                                }
                            </div>
                        }

                        <div class="article-content" style="font-size: 1.1rem; line-height: 1.8;">
                            @((MarkupString)FormatContent(post.Content))
                        </div>

                        <div style="clear: both;"></div>

                        @if (post.Sources?.Any() == true)
                        {
                            <div class="mt-5 p-4 bg-light rounded-3">
                                <h5 class="mb-3">
                                    <i class="bi bi-link-45deg"></i> Sources & References
                                </h5>
                                <div class="row">
                                    @foreach (var source in post.Sources)
                                    {
                                        <div class="col-md-6 mb-3">
                                            <a href="@source.Url" target="_blank" rel="noopener noreferrer"
                                               class="text-decoration-none">
                                                <div class="card h-100 border-0 shadow-sm">
                                                    <div class="card-body">
                                                        <h6 class="card-title">
                                                            <i class="bi bi-box-arrow-up-right"></i> @source.Title
                                                        </h6>
                                                        @if (!string.IsNullOrEmpty(source.Description))
                                                        {
                                                            <p class="card-text small text-muted">@source.Description</p>
                                                        }
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </article>

                    <!-- Editorial Opinion Section -->
                    @if (!string.IsNullOrEmpty(post.Opinion))
                    {
                        <article class="content-section opinion-section">
                            <h2 class="mb-4">
                                <i class="bi bi-chat-square-quote text-warning"></i> Editorial Opinion
                            </h2>
                            <div class="alert alert-warning mb-4">
                                <i class="bi bi-info-circle"></i> The following represents the author's personal perspective and analysis.
                            </div>
                            <div class="article-content fst-italic" style="font-size: 1.1rem; line-height: 1.8;">
                                @((MarkupString)FormatContent(post.Opinion))
                            </div>
                        </article>
                    }

                    <!-- Like and Share Section -->
                    <div class="content-section text-center my-4">
                        <h5 class="mb-3">Enjoyed this article?</h5>
                        <div class="d-flex justify-content-center gap-3">
                            @if (authState?.User.Identity?.IsAuthenticated == true)
                            {
                                <button class="btn @(userHasLiked ? "btn-primary" : "btn-outline-primary")"
                                        @onclick="ToggleLike">
                                    <i class="bi @(userHasLiked ? "bi-hand-thumbs-up-fill" : "bi-hand-thumbs-up")"></i>
                                    Like (@post.Likes.Count)
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary" @onclick="@(() => Navigation.NavigateTo("/login"))">
                                    <i class="bi bi-hand-thumbs-up"></i> Login to Like
                                </button>
                            }
                            <div style="display: inline-block;">
                                <SocialShare Title="@post.Title"
                                             Description="@TruncateText(post.Content, 160)" />
                            </div>
                        </div>
                    </div>

                    <!-- Comments Section -->
                    <section class="content-section my-4">
                        <h3 class="mb-4">
                            <i class="bi bi-chat-left-text"></i> Discussion (@post.Comments.Count)
                        </h3>

                        @if (authState?.User.Identity?.IsAuthenticated == true)
                        {
                            @if (isUserActive)
                            {
                                <div class="mb-4">
                                    <div class="d-flex align-items-start">
                                        <img src="https://ui-avatars.com/api/?name=@authState.User.Identity?.Name&background=random"
                                             class="rounded-circle me-3" width="48" height="48" alt="Your avatar">
                                        <div class="flex-grow-1">
                                            <EditForm Model="@newComment" OnValidSubmit="AddComment">
                                                <div class="mb-2">
                                                    <InputTextArea class="form-control" rows="3" @bind-Value="newComment.Content"
                                                                   placeholder="Share your thoughts on this story..." />
                                                </div>
                                                <button type="submit" class="btn btn-primary" disabled="@addingComment">
                                                    @if (addingComment)
                                                    {
                                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                                    }
                                                    Post Comment
                                                </button>
                                            </EditForm>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle"></i> Your account has been suspended.
                                </div>
                            }
                        }
                        else
                        {
                            <div class="card my-4" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white;">
                                <div class="card-body text-center py-3">
                                    <h6 class="mb-2">Join the Discussion</h6>
                                    <p class="mb-2 small">Share your thoughts and engage with our community</p>
                                    <a href="/login" class="btn btn-light btn-sm">Sign In to Comment</a>
                                </div>
                            </div>
                        }

                        @if (post.Comments.Any())
                        {
                            @foreach (var comment in post.Comments.OrderByDescending(c => c.Created))
                            {
                                <div class="comment-card">
                                    <div class="d-flex">
                                        <img src="https://ui-avatars.com/api/?name=@comment.Author?.UserName&background=random"
                                             class="rounded-circle me-3" width="48" height="48" alt="@comment.Author?.UserName">
                                        <div class="flex-grow-1">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div>
                                                    <h6 class="mb-1">
                                                        @comment.Author?.UserName
                                                        @if (comment.Author?.IsAdmin == true)
                                                        {
                                                            <span class="badge bg-danger ms-2">Admin</span>
                                                        }
                                                    </h6>
                                                    <small class="text-muted">@GetTimeAgo(comment.Created)</small>
                                                </div>
                                                <div>
                                                    @if (authState?.User.Identity?.IsAuthenticated == true)
                                                    {
                                                        @if (currentUserId == comment.AuthorId || authState.User.IsInRole("Admin"))
                                                        {
                                                            <button class="btn btn-sm btn-outline-danger me-1"
                                                                    @onclick="() => DeleteComment(comment.Id)">
                                                                <i class="bi bi-trash"></i>
                                                            </button>
                                                        }
                                                        @if (currentUserId != comment.AuthorId)
                                                        {
                                                            <button class="btn btn-sm btn-outline-warning"
                                                                    @onclick="() => ShowReportDialog(comment)">
                                                                <i class="bi bi-flag"></i>
                                                            </button>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                            <p class="mt-2 mb-0">@comment.Content</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="bi bi-chat-left-text display-6 text-muted"></i>
                                <p class="mt-2 text-muted">No comments yet. Be the first to share your thoughts!</p>
                            </div>
                        }
                    </section>
                </div>
            </div>
        </div>
    </div>
}

<!-- Report Modal -->
@if (showReportModal)
{
    <div class="modal show d-block animate-in" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Report Comment</h5>
                    <button type="button" class="btn-close" @onclick="CloseReportDialog"></button>
                </div>
                <div class="modal-body">
                    <p>Why are you reporting this comment?</p>
                    @foreach (var reason in reportReasons)
                    {
                        <div class="form-check mb-2">
                            <input class="form-check-input" type="radio" name="reportReason"
                                   id="@reason" value="@reason"
                                   @onchange="@((e) => reportReason = reason)">
                            <label class="form-check-label" for="@reason">
                                @reason
                            </label>
                        </div>
                    }
                    <div class="mt-3">
                        <label class="form-label">Additional details (optional):</label>
                        <textarea class="form-control" rows="3" @bind="reportDetails"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseReportDialog">Cancel</button>
                    <button type="button" class="btn btn-warning" @onclick="SubmitReport"
                            disabled="@(string.IsNullOrEmpty(reportReason))">
                        Submit Report
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<style>
    /* Stylish gradient header without image */
    .article-header-styled {
        background: linear-gradient(135deg, #012169 0%, #c8102e 100%);
        padding: 60px 0;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }

        .article-header-styled::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
            pointer-events: none;
        }

        .article-header-styled .breadcrumb {
            background: transparent;
            padding: 0;
            margin-bottom: 1rem;
        }

        .article-header-styled .breadcrumb-item + .breadcrumb-item::before {
            color: rgba(255, 255, 255, 0.5);
        }

        .article-header-styled .breadcrumb a {
            color: rgba(255, 255, 255, 0.8) !important;
            text-decoration: none;
            transition: color 0.2s;
        }

            .article-header-styled .breadcrumb a:hover {
                color: white !important;
            }

        .article-header-styled h1 {
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            max-width: 900px;
            margin: 0 auto;
        }

    /* Content sections */
    .content-section {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        transition: all 0.3s ease;
    }

        .content-section:hover {
            box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
        }

    .facts-section {
        border-left: 4px solid var(--bs-primary);
    }

    .opinion-section {
        background: linear-gradient(135deg, #fef3c7 0%, #fed7aa 100%);
        border-left: 4px solid var(--bs-warning);
    }

    /* Comments */
    .comment-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
        transition: all 0.3s ease;
        border-left: 3px solid transparent;
    }

        .comment-card:hover {
            box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1);
            border-left-color: var(--bs-primary);
            transform: translateX(5px);
        }

    /* Animations */
    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .animate-in {
        animation: fadeInUp 0.5s ease-out;
    }
</style>