@* Create new file: Components/Shared/RichTextEditor.razor *@
@using Microsoft.JSInterop
@implements IAsyncDisposable
@inject IJSRuntime JS

<div class="rich-text-editor">
    <textarea id="@editorId" @bind="Value" @bind:event="oninput"></textarea>
</div>

@code {
    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public int Height { get; set; } = 400;
    [Parameter] public string Placeholder { get; set; } = "Start typing...";
    [Parameter] public bool ShowMenuBar { get; set; } = true;

    private string editorId = $"editor-{Guid.NewGuid()}";
    private IJSObjectReference? module;
    private DotNetObjectReference<RichTextEditor>? dotNetRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/richTextEditor.js");
            await module.InvokeVoidAsync("initializeTinyMCE", editorId, dotNetRef, Height, Placeholder, ShowMenuBar);
        }
    }

    [JSInvokable]
    public async Task UpdateContent(string content)
    {
        Value = content;
        await ValueChanged.InvokeAsync(content);
    }

    public async ValueTask DisposeAsync()
    {
        if (module != null)
        {
            await module.InvokeVoidAsync("destroyTinyMCE", editorId);
            await module.DisposeAsync();
        }
        dotNetRef?.Dispose();
    }
}